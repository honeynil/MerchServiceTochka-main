// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/merch_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/honeynil/MerchServiceTochka-main/internal/models"
)

// MockMerchRepository is a mock of MerchRepository interface.
type MockMerchRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMerchRepositoryMockRecorder
}

// MockMerchRepositoryMockRecorder is the mock recorder for MockMerchRepository.
type MockMerchRepositoryMockRecorder struct {
	mock *MockMerchRepository
}

// NewMockMerchRepository creates a new mock instance.
func NewMockMerchRepository(ctrl *gomock.Controller) *MockMerchRepository {
	mock := &MockMerchRepository{ctrl: ctrl}
	mock.recorder = &MockMerchRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMerchRepository) EXPECT() *MockMerchRepositoryMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockMerchRepository) GetByID(ctx context.Context, id int32) (*models.Merch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*models.Merch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockMerchRepositoryMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockMerchRepository)(nil).GetByID), ctx, id)
}

// GetPrice mocks base method.
func (m *MockMerchRepository) GetPrice(ctx context.Context, id int32) (int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrice", ctx, id)
	ret0, _ := ret[0].(int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrice indicates an expected call of GetPrice.
func (mr *MockMerchRepositoryMockRecorder) GetPrice(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrice", reflect.TypeOf((*MockMerchRepository)(nil).GetPrice), ctx, id)
}
